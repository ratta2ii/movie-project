{"version":3,"sources":["Actions/ActionTypes.js","Actions/moviesActions.js","Components/Footer/FooterStyles.js","Components/Footer/Footer.js","Views/Home/HomeStyles.js","Views/Home/Home.js","Components/SingleMovie/SingleMovieStyles.js","Components/SingleMovie/SingleMovie.js","Views/Movies/MoviesStyles.js","Actions/movieInfoActions.js","Views/Movies/Movies.js","FirebaseDB/config.js","FirebaseDB/db.js","Views/MovieInfo/MovieInfoStyles.js","FirebaseDB/request.js","Views/MovieInfo/MovieInfo.js","Components/TopRibbon/TopRibbonStyles.js","Components/TopRibbon/TopRibbon.js","Components/Navigation/NavigationStyles.js","Components/Navigation/Navigation.js","Views/Error404/Error404Styles.js","Views/Error404/Error404.js","App.js","Reducers/movies-reducer.js","Reducers/movie-info-reducer.js","Reducers/index.js","Middleware/middleware-logger.js","index.js"],"names":["REQUEST_MOVIES","GET_MOVIES_SUCCESS","GET_MOVIES_FAILURE","REQUEST_MOVIE_INFO","GET_MOVIE_INFO_SUCCESS","GET_MOVIE_INFO_FAILURE","moviesByTitleCall","movieTitle","dispatch","getState","fetch","process","then","res","json","results","movies","console","log","Search","type","c","error","getMoviesFailure","useStyles","makeStyles","theme","root","width","position","bottom","textAlign","text","color","fontSize","fontFamily","Footer","props","classes","Box","className","Typography","variant","title","paddingTop","marginBottom","wordSpacing","formBox","FormControl","backgroundColor","inputField","paddingLeft","findMovieButton","padding","marginLeft","borderTopLeftRadius","borderBottomLeftRadius","background","connect","state","moviesSlice","moviesError","useState","setMovieTitle","InputLabel","htmlFor","FilledInput","onChange","e","target","value","Button","onClick","history","push","display","justifyContent","alignItems","height","paper","borderTop","borderRight","borderBottom","borderLeft","cursor","moviePosterImg","SingleMovie","handleMovieInfo","poster","imdbID","Grid","item","xs","sm","md","lg","justify","Paper","src","alt","returnHomeBox","marginTop","returnHomeBtn","textDecoration","movieInfoCall","movieInfo","getMovieInfoFailure","isLoading","setTimeout","length","container","spacing","map","ele","index","Poster","component","Link","to","Fragment","message","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","require","apps","initializeApp","db","firestore","paperCon","posterImgGridItem","posterImgCon","minHeight","maxHeight","posterImg","infoBox","lineHeight","dirNdate","moviePlot","letterSpacing","actionAreaGridCon","backContainer","arrowIcon","backButton","votesBox","marginRight","voteText","downThumbIcon","margin","upThumbIcon","moviesRef","collection","addVoteToDb","movieEntry","doc","set","movieInfoSlice","movieInfoError","Title","Director","Released","Plot","upVotes","downVotes","currentVotes","setCurrentVotes","upVoteStatus","setUpVoteStatus","downVoteStatus","setDownVoteStatus","useEffect","where","get","querySnapshot","data","forEach","catch","voteUpdate","handleDownVote","style","handleUpVote","top","left","homeIcon","right","TopRibbon","Navigation","errorText","linkText","Error404","location","pathname","withRouter","exact","path","Home","Movies","MovieInfo","initialState","rootReducer","combineReducers","action","Object","assign","middlewareLogger","store","next","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b8cf067f.chunk.js","sourcesContent":["// API CALL FOR ALL MOVIES WITH A SPECIFIC TITLE\nexport const REQUEST_MOVIES='REQUEST_MOVIES'\nexport const GET_MOVIES_SUCCESS='GET_MOVIES_SUCCESS'\nexport const GET_MOVIES_FAILURE='GET_MOVIES_FAILURE'\n// API CALL FOR INFO ON A SINGLE MOVIE\nexport const REQUEST_MOVIE_INFO='REQUEST_MOVIE_INFO'\nexport const GET_MOVIE_INFO_SUCCESS='GET_MOVIE_INFO_SUCCESS'\nexport const GET_MOVIE_INFO_FAILURE='GET_MOVIE_INFO_FAILURE'\n","import * as c from './ActionTypes';\n\n\nexport const requestMovies = () => ({\n    type: c.REQUEST_MOVIES\n});\n\n\nexport const getMoviesSuccess = (movies) => ({\n    type: c.GET_MOVIES_SUCCESS,\n    movies\n});\n\n\nexport const getMoviesFailure = (error) => ({\n    type: c.GET_MOVIES_FAILURE,\n    error\n});\n\n\nexport const moviesByTitleCall = (movieTitle) => {\n    return (dispatch, getState) => {\n        // returns a list of movies based on the title a user inputed\n        fetch(`https://www.omdbapi.com/?apikey=${process.env.REACT_APP_OMDBAPI_KEY}&plot=short&s=${movieTitle}`)\n            .then(res => res.json())\n            .then(results => {\n                console.log(results.Search);\n                dispatch(getMoviesSuccess(results.Search));\n            },\n            (error) => {\n                console.log(error);\n                dispatch(getMoviesFailure(error));\n            });\n    }\n}\n\n\n\n// Alternative API\n// https://api.themoviedb.org/3/movie/550?api_key=","import { makeStyles } from '@material-ui/core/styles';\n\n\nexport const useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        position: 'fixed',\n        bottom: 12,\n        textAlign:'center',\n    },\n    text: {\n        color: '#4c3f3d',\n        fontSize: '1rem',\n        fontFamily: 'monospace'\n    }\n}));\n\nexport default useStyles;","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport useStyles from './FooterStyles';\n\n\nconst Footer = (props) => {\n\n    const classes = useStyles();\n\n    return (\n        <Box className={classes.root}>\n            <Typography variant=\"h6\" className={classes.text}>\n                Movie App by Trevor Mackin\n            </Typography>\n        </Box>\n    );\n};\n\nexport default Footer;","import { makeStyles } from '@material-ui/core/styles';\n\n\nexport const useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100vw',\n    },\n    title: {\n        color: '#f5bc16',\n        fontFamily: `'Acme', fantasy, sans-serif`,\n        paddingTop: 150,\n        marginBottom: 30,\n        fontSize: 70,\n        textAlign: 'center',\n        wordSpacing: '.6rem',\n    },\n    formBox: {\n        textAlign: 'center',\n    },\n    FormControl: {\n        width: 500,\n        backgroundColor: 'white',\n    },\n    inputField: {\n        fontSize: 20,\n        paddingLeft: 10,\n        backgroundColor: 'white',\n        '&hover': {\n            backgroundColor: 'white',\n        }\n    },\n    findMovieButton: {\n        color: '#ffffff',\n        padding: 18.5,\n        marginLeft: 5,\n        backgroundColor: '#3f51b5',\n        borderTopLeftRadius: 0,\n        borderBottomLeftRadius: 0,\n        '&:hover': {\n            background: \"#f00\",\n        }\n    }\n}));\n\nexport default useStyles;","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport { moviesByTitleCall } from './../../Actions/moviesActions';\nimport { Typography } from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport Footer from './../../Components/Footer/Footer';\nimport useStyles from './HomeStyles';\n\n\nconst Home = (props) => {\n\n    const { dispatch } = props;\n    const classes = useStyles();\n    const [movieTitle, setMovieTitle] = useState('');\n\n    const handleFindMovie = () => {\n        dispatch(moviesByTitleCall(movieTitle));\n        props.history.push('/movies');\n    }\n\n    return (\n        <Box className={classes.root} >\n            <Box>\n                <Typography className={classes.title} >\n                    SEARCH MOVIES BY TITLE\n                </Typography>\n                <Box className={classes.formBox} >\n                    <FormControl\n                        // fullWidth \n                        className={classes.FormControl}\n                        variant=\"filled\" >\n                        <InputLabel htmlFor=\"filled-adornment-amount\" >\n                            Enter Movie Title Here\n                        </InputLabel>\n                        <FilledInput\n                            className={classes.inputField}\n                            onChange={(e) => { setMovieTitle(e.target.value) }}\n                        />\n                    </FormControl>\n                    <Button\n                        className={classes.findMovieButton}\n                        onClick={handleFindMovie}>\n                        FIND MOVIE\n                    </Button>\n                </Box>\n                <Box>\n                </Box>\n            </Box>\n            <Footer />\n        </Box>\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        movies: state.moviesSlice.movies,\n        moviesError: state.moviesSlice.error,\n    }\n};\n\nexport default connect(mapStateToProps)(Home);\n\n","import { makeStyles } from '@material-ui/core/styles';\n\n\nexport const useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '100vw',\n        height: '80vh',\n    },\n    paper: {\n        padding: 20,\n        width: 200,\n        backgroundColor: '#223037',\n        borderTop: '5px solid #2f3940',\n        borderRight: '5px solid #2f3940',\n        borderBottom: '5px solid #2f3940',\n        borderLeft: '5px solid #2f3940',\n        height: 300,\n        marginBottom: 15,\n        cursor: 'pointer',\n    },\n    moviePosterImg: {\n        width: 200,\n        height: 300,\n    }\n}));\n\nexport default useStyles;","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport useStyles from './SingleMovieStyles';\n\n\nconst SingleMovie = (props) => {\n\n    const { handleMovieInfo, poster, imdbID } = props;\n    const classes = useStyles();\n\n    return (\n        <Grid item xs={12} sm={6} md={4} lg={3} justify='center'>\n            <Paper \n                className={classes.paper}\n                onClick={() => handleMovieInfo(imdbID)} >\n                <img\n                    className={classes.moviePosterImg} \n                    src={poster} \n                    alt=\"movie poster\" />\n            </Paper>\n        </Grid>\n    );\n};\n\nexport default SingleMovie;\n\n\n\n\n\n","import { makeStyles } from '@material-ui/core/styles';\n\n\nexport const useStyles = makeStyles((theme) => ({\n    root: {\n        padding: '10% 13%',\n    },\n    returnHomeBox: {\n        marginTop: 60,\n        marginBottom: 200,\n    },\n    returnHomeBtn: {\n        color: 'white',\n        textDecoration: 'none',\n        fontSize: 16,\n        background: \"#3f51b5\",\n        padding: '10px 75px 10px 50px',\n        position: 'absolute',\n        '&:hover': {\n            background: 'red',\n        }\n    },\n}));\n\nexport default useStyles;","import * as c from './ActionTypes';\n\n\nexport const requestMovieInfo = () => ({\n    type: c.REQUEST_MOVIE_INFO\n});\n\n\nexport const getMovieInfoSuccess = (movieInfo) => ({\n    type: c.GET_MOVIE_INFO_SUCCESS,\n    movieInfo\n});\n\n\nexport const getMovieInfoFailure = (error) => ({\n    type: c.GET_MOVIE_INFO_FAILURE,\n    error\n});\n\n\nexport const movieInfoCall = (imdbID) => {\n    return (dispatch, getState) => {\n        // returns a single movies details based on a users selection\n        fetch(`https://www.omdbapi.com/?apikey=${process.env.REACT_APP_OMDBAPI_KEY}&plot=short&i=${imdbID}`)\n            .then(res => res.json())\n            .then(results => {\n                dispatch(getMovieInfoSuccess(results));\n            },\n            (error) => {\n                console.log(error);\n                dispatch(getMovieInfoFailure(error));\n            });\n    }\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport SingleMovie from './../../Components/SingleMovie/SingleMovie';\nimport useStyles from './MoviesStyles';\nimport { movieInfoCall } from './../../Actions/movieInfoActions';\n\n\nconst Movies = (props) => {\n\n    const { dispatch, movies, moviesError, isLoading } = props;\n    const classes = useStyles();\n\n    const handleMovieInfo = (imdbID) => {\n        dispatch(movieInfoCall(imdbID));\n        setTimeout(() => {\n            props.history.push('/movie-info');\n        }, 200)\n    }\n\n    if (movies) {\n        if (movies.length > 0) {\n            return (\n                <Box className={classes.root} >\n                    <Grid container spacing={8} >\n                        {movies.map((ele, index) =>\n                            <SingleMovie\n                                handleMovieInfo={handleMovieInfo}\n                                key={index}\n                                poster={ele.Poster}\n                                imdbID={ele.imdbID}\n                            />\n                        )}\n                    </Grid>\n                    <Box className={classes.returnHomeBox} >\n                        <Button\n                            className={classes.returnHomeBtn}\n                            component={Link}\n                            to='/'\n                        >\n                            RETURN HOME\n                        </Button>\n                    </Box>\n                </Box >\n            );\n        }\n    }\n    //! Here down still needs styling (reusable error component coming soon).\n    if (moviesError) {\n        return <React.Fragment>Error: {moviesError.message}</React.Fragment>;\n    }\n    else if (isLoading) {\n        return <Box>...still loading</Box>\n    }\n    else {\n        return <Box>Sorry, we cannot find any movies with that name.</Box>\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        movies: state.moviesSlice.movies,\n        moviesError: state.moviesSlice.error,\n        isLoading: state.moviesSlice.isLoading,\n    }\n};\n\nexport default connect(mapStateToProps)(Movies);\n\n\n","var firebaseConfig = {\n    apiKey: `${process.env.REACT_APP_FIREBASE_API_KEY}`,\n    authDomain: \"movie-project-16799.firebaseapp.com\",\n    databaseURL: \"https://movie-project-16799.firebaseio.com\",\n    projectId: \"movie-project-16799\",\n    storageBucket: \"movie-project-16799.appspot.com\",\n    messagingSenderId: \"818486198423\",\n    appId: \"1:818486198423:web:bbcfdf7953ea52782ca9d2\",\n    measurementId: \"G-Z10T2TEQM1\"\n};\n\n\nexport default firebaseConfig;","import firebaseConfig from \"./config\";\nconst firebase = require(\"firebase\");\nrequire(\"firebase/firestore\");\n\n// Initialize Firebase DB if none exist under current configs\n// This statement is necessary to prevent errors\nif (!firebase.apps.length) {\n    firebase.initializeApp(firebaseConfig);\n}\n\nconst db = firebase.firestore();\n\nexport default db;\n","import { makeStyles } from '@material-ui/core/styles';\n\n\nexport const useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '79.5vh',\n    },\n    paperCon: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: 'rgb(27, 38, 43)',\n        color: 'white',\n        width: 750,\n        fontFamily: 'sans-serif'\n    },\n    posterImgGridItem: {\n        display: 'flex',\n        justifyContent: 'center',\n        paddingTop: 50,\n    },\n    posterImgCon: {\n        backgroundColor: '#223037',\n        width: '60%',\n        minHeight: 100,\n        maxHeight: 365,\n        padding: '15px 15px 10px',\n    },\n    posterImg: {\n        width: '100%',\n        maxHeight: 340,\n    },\n    infoBox: {\n        padding: '50px 50px 50px 0',\n    },\n    movieTitle: {\n        fontSize: '2rem',\n        fontFamily: 'sans-serif',\n        marginTop: 20,\n        color: '#f5bc16',\n        lineHeight: '2.5rem',\n    },\n    dirNdate: {\n        color: '#89b9df',\n        fontSize: '.9rem',\n        marginTop: 5,\n    },\n    moviePlot: {\n        fontSize: '1rem',\n        letterSpacing: '.02rem',\n        lineHeight: '1.3',\n        marginTop: 25,\n    },\n    actionAreaGridCon: {\n        marginTop: 50,\n        borderTop: '1px solid #29383f',\n        height: 65,\n        display:'flex',\n        alignItems: 'center',\n    },\n    backContainer: {\n        display: 'flex',\n        alignItems: 'center',\n        marginLeft: 62,\n        height: 40,\n        marginTop: 3,\n    },\n    arrowIcon: {\n        color: '#637c90',\n    },\n    backButton: {\n        fontSize: '.8rem',\n        marginLeft: -8,\n        color: '#637c90',\n    },\n    votesBox: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginRight: 50,\n        height: 40,\n        color: '#637c90',\n    },\n    voteText: {\n        fontSize: '.8rem',\n        marginBottom: 10,\n    },\n    downThumbIcon: {\n        margin: '0 2px 0 10px',\n        fontSize: 'large',\n        cursor: 'pointer',\n    },\n    upThumbIcon: {\n        margin: '0 10px 0 2px',\n        fontSize: 'large',\n        cursor: 'pointer',\n    },\n}));\n\nexport default useStyles;","import db from './db';\n\n\nvar moviesRef = db.collection(\"movies\");\n\nexport const addVoteToDb = (movieEntry) => {\n    moviesRef.doc(movieEntry.imdbID).set(movieEntry);  \n}\n\n//? Bring query in movieInfo into this module (???)\n// export const retrieveVotes = (id) => {\n//             var moviesRef = db.collection(\"movies\");\n//         var query = moviesRef.where(\"imdbID\", \"==\", movieInfo.imdbID);\n//         query.get().then(function (querySnapshot) {\n//             let data;\n//             querySnapshot.forEach(function (doc) {\n//                 console.log(doc.id, ' => ', doc.data());\n//                 data = doc.data();\n//                 if (\"upVotes\" in data) {\n//                     setCurrentVotes(data);\n//                 } else {\n//                     setCurrentVotes({\n//                         upVotes: 0,\n//                         downVotes: 0,\n//                     })\n//                 }\n//             })\n//         })\n//             .catch(error => {\n//                 console.log(error.message);\n//             })\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction request(vote) {\n    // db.collection(\"movies\").add(vote)\n    //     .then(function (docRef) {\n    //         console.log(\"Document written with ID: \", docRef.id);\n    //     })\n    //     .catch(function (error) {\n    //         console.error(\"Error adding document: \", error);\n    // });\n    // return false;\n\n\n\n\n\n    // var moviesRef = db.collection(\"movies\");\n\n    // // moviesRef.doc(\"Spider Man\").set({\n    // //     upVotes: 1 + 1,\n    // //     downVotes: 17,\n    // //     imdbID: 'tt0456165'\n    // // });\n\n    // var query = moviesRef.where(\"imdbID\", \"==\", \"tt0456165\");\n\n    // query.get().then(function (querySnapshot) {\n    //     querySnapshot.forEach(function (doc) {\n    //         console.log(doc.id, ' => ', doc.data());\n    //     });\n    // });\n    \n\n\n\n\n\n    // var citiesRef = db.collection(\"cities\");\n\n    // citiesRef.doc(\"SF\").set({\n    //     name: \"San Francisco\", state: \"CA\", country: \"USA\",\n    //     capital: false, population: 1000,\n    //     regions: [\"west_coast\", \"norcal\"] });\n\n// citiesRef.doc(\"SF\").set({\n//     name: \"San Francisco\", state: \"CA\", country: \"USA\",\n//     capital: false, population: 860000,\n//     regions: [\"west_coast\", \"norcal\"] });\n// citiesRef.doc(\"LA\").set({\n//     name: \"Los Angeles\", state: \"CA\", country: \"USA\",\n//     capital: false, population: 3900000,\n//     regions: [\"west_coast\", \"socal\"] });\n// citiesRef.doc(\"DC\").set({\n//     name: \"Washington, D.C.\", state: null, country: \"USA\",\n//     capital: true, population: 680000,\n//     regions: [\"east_coast\"] });\n// citiesRef.doc(\"TOK\").set({\n//     name: \"Tokyo\", state: null, country: \"Japan\",\n//     capital: true, population: 9000000,\n//     regions: [\"kanto\", \"honshu\"] });\n// citiesRef.doc(\"BJ\").set({\n//     name: \"Beijing\", state: null, country: \"China\",\n//     capital: true, population: 21500000,\n//     regions: [\"jingjinji\", \"hebei\"] });\n}\n\n\n\n\n\n// db.collection(\"users\").add({\n//     first: \"Alan\",\n//     middle: \"Mathison\",\n//     last: \"Turing\",\n//     born: 1912\n// })\n// .then(function(docRef) {\n//     console.log(\"Document written with ID: \", docRef.id);\n// })\n// .catch(function(error) {\n//     console.error(\"Error adding document: \", error);\n// });\n// db.collection(\"users\").get().then((querySnapshot) => {\n//     querySnapshot.forEach((doc) => {\n//         console.log(`${doc.id} => ${doc.data()}`);\n//     });\n// });","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport Link from 'react-dom';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown';\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\nimport db from './../../FirebaseDB/db';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport Footer from './../../Components/Footer/Footer';\nimport useStyles from './MovieInfoStyles';\nimport { addVoteToDb } from './../../FirebaseDB/request';\n\n\nconst MovieInfo = (props) => {\n\n    let defaultVotes = {\n        upVotes: 0,\n        downVotes: 0,\n    };\n\n    const { movieInfo, movieInfoError, isLoading } = props;\n    const { Poster, Title, Director, Released, Plot } = movieInfo;\n    const [currentVotes, setCurrentVotes] = useState(defaultVotes);\n    // One vote per user, per session (since no auth), however, you can undo and vote again.\n    const [upVoteStatus, setUpVoteStatus] = useState(false);\n    const [downVoteStatus, setDownVoteStatus] = useState(false);\n    const classes = useStyles();\n\n    useEffect(() => {\n        //* This checks to see if the current movie selected has previous votes in the\n        //* database by using the imdbID. If it finds an imdbID match, it retrieves the\n        //* vote totals and renders them instead of the default vote totals (0, 0).\n        //? Move to a different module later?\n        if (movieInfo.imdbID) {\n            var moviesRef = db.collection(\"movies\");\n            var query = moviesRef.where(\"imdbID\", \"==\", movieInfo.imdbID);\n            query.get().then(function (querySnapshot) {\n                let data;\n                querySnapshot.forEach(function (doc) {\n                    // console.log(doc.id, ' => ', doc.data());\n                    data = doc.data();\n                    if (\"upVotes\" in data) {\n                        setCurrentVotes(data);\n                    }\n                    return false;\n                })\n            }).catch(error => {\n                console.log(error.message);\n            });\n        }\n    }, [movieInfo.imdbID]);\n\n    useEffect(() => {\n        return () => console.log('unmounting...');\n    }, []);\n\n    //* add(Up/Down)Vote updates the database as well as the local state for the vote totals.\n    //* The local state will always show a users votes while also updating the db to any changes.\n    //* When the component first mounts, the database returns current vote counts -see useEffect().\n    //* Note: One vote per user, per session (since no auth), however, you can undo and vote again.\n    const handleUpVote = () => {\n        if (downVoteStatus) return false;\n        let voteUpdate = {\n            upVotes: currentVotes.upVotes,\n            downVotes: currentVotes.downVotes,\n            imdbID: movieInfo.imdbID,\n            title: Title\n        };\n        if (!upVoteStatus) {\n            voteUpdate.upVotes = currentVotes.upVotes + 1;\n            addVoteToDb(voteUpdate);\n            setUpVoteStatus(true);\n            setCurrentVotes({\n                ...currentVotes,\n                upVotes: currentVotes.upVotes + 1\n            });\n        } else {\n            voteUpdate.upVotes = currentVotes.upVotes - 1;\n            addVoteToDb(voteUpdate);\n            setUpVoteStatus(false);\n            setCurrentVotes({\n                ...currentVotes,\n                upVotes: currentVotes.upVotes - 1\n            });\n        }\n    };\n\n    //* Note: One vote per user, per session (since no auth), however, you can undo and vote again.\n    const handleDownVote = () => {\n        if (upVoteStatus) return false;\n        let voteUpdate = {\n            upVotes: currentVotes.upVotes,\n            downVotes: currentVotes.downVotes + 1,\n            imdbID: movieInfo.imdbID,\n            title: Title\n        }\n        if (!downVoteStatus) {\n            voteUpdate.downVotes = currentVotes.downVotes + 1;\n            addVoteToDb(voteUpdate);\n            setDownVoteStatus(true);\n            setCurrentVotes({\n                ...currentVotes,\n                downVotes: currentVotes.downVotes + 1\n            });\n        } else {\n            voteUpdate.downVotes = currentVotes.downVotes - 1;\n            addVoteToDb(voteUpdate);\n            setDownVoteStatus(false);\n            setCurrentVotes({\n                ...currentVotes,\n                downVotes: currentVotes.downVotes - 1\n            });\n        }\n    };\n\n    const handleBackToMovies = () => {\n        props.history.push('/movies');\n    };\n\n    if (movieInfo) {\n        return (\n            <Box className={classes.root} >\n                <Paper className={classes.paperCon} >\n                    <Grid container>\n                        {/* Main movie poster grid container */}\n                        <Grid item xs={12} md={6} className={classes.posterImgGridItem} >\n                            <Box className={classes.posterImgCon} >\n                                <img src={Poster}\n                                    alt=\"movie poster\"\n                                    className={classes.posterImg}\n                                />\n                            </Box>\n                        </Grid>\n                        {/* Main movie info container */}\n                        <Grid item xs={12} md={6} >\n                            <Grid container>\n                                <Box className={classes.infoBox} >\n                                    {/* Movie info top container */}\n                                    <Grid item xs={12}>\n                                        <Typography className={classes.movieTitle} >\n                                            {Title}\n                                        </Typography>\n                                        <Typography className={classes.dirNdate} >\n                                            Release Date ({Released})\n                                        </Typography>\n                                        <Typography className={classes.dirNdate} >\n                                            Director by {Director}\n                                        </Typography>\n                                    </Grid>\n                                    {/* Movie info bottom container */}\n                                    <Grid item xs={12} >\n                                        <Typography className={classes.moviePlot} >\n                                            {Plot}\n                                        </Typography>\n                                    </Grid>\n                                </Box>\n                            </Grid>\n                        </Grid>\n                        {/* Bottom of main container */}\n                        <Grid container className={classes.actionAreaGridCon} >\n                            <Grid item md={6} >\n                                <Box\n                                    className={classes.backContainer}\n                                    onClick={handleBackToMovies} >\n                                    <ArrowBackIosIcon className={classes.arrowIcon} />\n                                    <Button className={classes.backButton} >\n                                        Back to Movies\n                                    </Button>\n                                </Box>\n                            </Grid>\n                            <Grid item md={6}>\n                                <Box className={classes.votesBox} >\n                                    <Typography variant=\"h6\">\n                                        <Typography\n                                            className={classes.voteText}\n                                            variant=\"title\">\n                                            DOWN VOTES  [ {currentVotes.downVotes} ]\n                                        </Typography>\n                                        <ThumbDownIcon\n                                            className={classes.downThumbIcon}\n                                            onClick={() => handleDownVote()}\n                                            style={{\n                                                color: (downVoteStatus) ? '#89b9df' : '#637c90',\n                                                cursor: (downVoteStatus ||\n                                                    ((!downVoteStatus) && (!upVoteStatus))) ? 'pointer' : 'no-drop'\n                                            }}\n                                        />\n                                        <ThumbUpIcon\n                                            className={classes.upThumbIcon}\n                                            onClick={() => handleUpVote()}\n                                            style={{\n                                                color: (upVoteStatus) ? '#89b9df' : '#637c90',\n                                                cursor: (upVoteStatus ||\n                                                    ((!upVoteStatus) && (!downVoteStatus))) ? 'pointer' : 'no-drop'\n                                            }}\n                                        />\n                                        <Typography\n                                            className={classes.voteText}\n                                            variant=\"title\">\n                                            [ {currentVotes.upVotes} ] UP VOTES\n                                        </Typography>\n                                    </Typography>\n                                </Box>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Paper>\n                <Footer />\n            </Box>\n        );\n    }\n    // ! Currently no styling for errors (Build error component to reuse when necessary)\n    else if (movieInfoError) {\n        return <React.Fragment>Error: {movieInfoError.message}</React.Fragment>;\n    }\n    else if (isLoading) {\n        return <Box>...still loading</Box>\n    }\n    else {\n        return (\n            <Box>\n                <Typography variant='h4'>\n                    There seems to be a problem.\n                </Typography>\n                <Link to='/'>Return Home</Link>\n            </Box>\n        );\n    }\n};\n\nconst mapStateToProps = state => {\n    return {\n        movieInfo: state.movieInfoSlice.movieInfo,\n        movieInfoError: state.movieInfoSlice.error,\n        isLoading: state.movieInfoSlice.isLoading,\n    }\n};\n\nexport default connect(mapStateToProps)(MovieInfo);\n\n\n\n\n\n\n\n\n\n\n","import { makeStyles } from '@material-ui/core/styles';\n\n\nexport const useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100vw',\n        height: '20vh',\n        backgroundColor: '#f4433699',\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        borderBottom: '5px solid red',\n    },\n    homeIcon: {\n        color: '#ffffff',\n        fontSize: 100,\n        position: 'fixed',\n        top: 50,\n        right: 50,\n    }\n}));\n\nexport default useStyles;","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport useStyles from './TopRibbonStyles';\n\n\nconst TopRibbon = (props) => {\n\n    const classes = useStyles();\n\n    return (\n        <Box className={classes.root} ></Box>\n    )\n};\n\nexport default TopRibbon;\n","import { makeStyles } from '@material-ui/core/styles';\n\n\nexport const useStyles = makeStyles((theme) => ({\n    homeIcon: {\n        top: 30,\n        color: '#00000082',\n        right: 30,\n        position: 'absolute',\n        fontSize: 50,\n    }\n}));\n\nexport default useStyles;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Box from '@material-ui/core/Box';\nimport HomeSharpIcon from '@material-ui/icons/HomeSharp';\nimport useStyles from './NavigationStyles';\n\n\nconst Navigation = (props) => {\n\n    const classes = useStyles();\n\n    return (\n        <Box className={classes.root} >\n            <Link to='/' >\n                <HomeSharpIcon className={classes.homeIcon} />\n            </Link>\n        </Box>\n    )\n};\n\nexport default Navigation;","import { makeStyles } from '@material-ui/core/styles';\n\n\nexport const useStyles = makeStyles((theme) => ({\n    root: {\n        fontSize: 16,\n        fontFamily: 'monospace',\n        textAlign: 'center',\n        color: 'red',\n        marginTop: 170,\n    },\n    errorText: {\n        color: 'red',\n        fontFamily: 'monospace',\n        paddingTop: 100,\n    },\n    linkText: {\n        textDecoration: 'none',\n        color: 'dodgerblue',\n        margin: '0 5px',\n        fontFamily: 'monospace',\n    },\n}));\n\nexport default useStyles;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport useStyles from './Error404Styles';\n\n\nfunction Error404(props) {\n\n    const classes = useStyles();\n\n    return (\n        <Box className={classes.root}>\n            <Typography variant='h4' \n                className={classes.errorText}>\n                The page {props.location.pathname} does not exist!\n            </Typography>\n            <Typography variant='h6'>\n                Would you like to return\n                <Link to=\"/\" className={classes.linkText} >\n                    HOME\n                </Link> \n                instead?\n            </Typography>\n        </Box>\n    );\n}\n\nError404.propTypes = {\n    location: PropTypes.object,\n};\n\nexport default Error404;","import React, { Fragment } from 'react';\nimport { Switch, Route, withRouter } from 'react-router-dom';\nimport Home from './Views/Home/Home';\nimport Movies from './Views/Movies/Movies';\nimport MovieInfo from './Views/MovieInfo/MovieInfo';\nimport TopRibbon from './Components/TopRibbon/TopRibbon';\nimport Navigation from './Components/Navigation/Navigation';\nimport Error404 from './Views/Error404/Error404';\n\n\nconst App = () => {\n\n    return (\n        <Fragment>\n            <TopRibbon />\n            <Navigation />\n            <Switch>\n                <Route exact path='/' component={Home} />\n                <Route path='/movies' component={Movies} />\n                <Route path='/movie-info' component={MovieInfo} />\n                <Route component={Error404} />\n            </Switch>\n        </Fragment>\n    );\n}\n\nexport default withRouter(App);\n","/* eslint-disable import/no-anonymous-default-export */\nimport * as c from '../Actions/ActionTypes';\n\n\nlet initialState = {\n    isLoading: false,\n    movies: [],\n    error: null,\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case c.REQUEST_MOVIES:\n            return Object.assign({}, state, {\n                isLoading: true\n            });\n        case c.GET_MOVIES_SUCCESS:\n            return Object.assign({}, state, {\n                isLoading: false,\n                movies: action.movies\n            });\n        case c.GET_MOVIES_FAILURE:\n            return Object.assign({}, state, {\n                isLoading: false,\n                error: action.error\n            });    \n        default:\n            return state;\n    }\n};","/* eslint-disable import/no-anonymous-default-export */\nimport * as c from '../Actions/ActionTypes';\n\n\nlet initialState = {\n    isLoading: false,\n    movieInfo: {},\n    error: null,\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case c.REQUEST_MOVIE_INFO:\n            return Object.assign({}, state, {\n                isLoading: true\n            });\n        case c.GET_MOVIE_INFO_SUCCESS:\n            return Object.assign({}, state, {\n                isLoading: false,\n                movieInfo: action.movieInfo\n            });\n        case c.GET_MOVIE_INFO_FAILURE:\n            return Object.assign({}, state, {\n                isLoading: false,\n                error: action.error\n            });    \n        default:\n            return state;\n    }\n};","import { combineReducers } from 'redux';\nimport moviesReducer from './movies-reducer';\nimport movieInfoReducer from './movie-info-reducer';\n\n\nconst rootReducer = combineReducers({\n    moviesSlice: moviesReducer,\n    movieInfoSlice: movieInfoReducer,\n});\n\nexport default rootReducer;","const middlewareLogger = store => next => action => {\n    console.log('Original State:', store.getState());\n    console.log('Current Action:', action);\n    next(action);\n    console.log('New Updated State:', store.getState());\n};\n\nexport default middlewareLogger;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\nimport rootReducer from './Reducers/index';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport middlewareLogger from './Middleware/middleware-logger';\n\n\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware, middlewareLogger));\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <HashRouter>\n                <App />\n            </HashRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}